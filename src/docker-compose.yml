services:
  sidecar:
    build:
      dockerfile: "Sidecar/Dockerfile"
    depends_on:
      - app
    environment:
      SERVICE_NAME: "app"
      SERVICE_PORT: 3000
      LISTENER_PORT: 5000
      DEBUG_LEVEL: "warn"
    ports:
      - 5000:5000

  app:
    build:
      dockerfile: "WebApi/Dockerfile"
      args:
        PRODUCT_VERSION: "1.0.0"
    depends_on:
      - dynamodb
      - redis
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:3000"
      DOTNET_ReadyToRun: 0
      DOTNET_TC_QuickJitForLoops: 1
      DOTNET_TieredCompilation: 1
      DOTNET_TieredPGO: 1
      DOTNET_gcServer: 1
      DOTNET_GCDynamicAdaptationMode: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      ConnectionStrings__DynamoDb: "http://dynamodb:8000"
      ConnectionStrings__Redis: "redis:6379"
      ConnectionStrings__SwApi: "https://swapi.dev/api/"
      ConnectionStrings__Pg: "Host=localhost;Database=TodoApp;Username=postgres;Password=local"

  dynamodb:
    image: amazon/dynamodb-local:latest
    ports:
      - 5434:8000

  redis:
    image: "redis:latest"
    command: [sh, -c, "rm -f /data/dump.rdb && redis-server --save '' --appendonly no"]
    ports:
      - 5435:6379

  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: local

  adminer:
    image: adminer
    restart: always
    ports:
      - 5433:8080
